<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.clickMe.post.model.dao.PostMapper">
	<resultMap type="PostDTO" id="postDefaultResultMap">
		<id property="code" column="POST_CODE"/>
		<result property="sellerCode" column="SELLER_CODE"/>
		<result property="buyerCode" column="BUYER_CODE"/>
		<result property="catCode" column="POST_CAT_CODE"/>
		<result property="authCode" column="AUTH_CODE"/>
		<result property="title" column="POST_TITLE"/>
		<result property="content" column="POST_CONTENT"/>
		<result property="likeCount" column="LIKE_COUNT"/>
		<result property="time" column="POST_TIME"/>
		<result property="soldYn" column="SOLD_YN"/>
		<result property="reportCount" column="REPORT_COUNT"/>
		<result property="blindYn" column="BLIND_YN"/>
		<result property="itemPrice" column="ITEM_PRICE"/>
		<result property="view" column="POST_VIEW"/>
	</resultMap>
	
	<select id="selectAllPost" resultMap="postDefaultResultMap">
		SELECT
			   A.POST_CODE
             , A.SELLER_CODE
             , A.BUYER_CODE
             , A.POST_CAT_CODE
             , A.AUTH_CODE
             , A.POST_TITLE
             , A.POST_CONTENT
             , A.LIKE_COUNT
             , A.POST_TIME
             , A.SOLD_YN
             , A.REPORT_COUNT
             , A.BLIND_YN
             , A.ITEM_PRICE
             , A.POST_VIEW
          FROM POST A
         ORDER BY A.POST_CODE DESC
	</select>
	<select id="selectPostBySearchOption" parameterType="SearchOption" resultMap="postDefaultResultMap">
		SELECT
			   A.POST_CODE
             , A.SELLER_CODE
             , A.BUYER_CODE
             , A.POST_CAT_CODE
             , A.AUTH_CODE
             , A.POST_TITLE
             , A.POST_CONTENT
             , A.LIKE_COUNT
             , A.POST_TIME
             , A.SOLD_YN
             , A.REPORT_COUNT
             , A.BLIND_YN
             , A.ITEM_PRICE
             , A.POST_VIEW
          FROM POST A
		<if test="option == 'sellerCode'">
		  JOIN "USER" B ON (A.SELLER_CODE = B.USER_CODE)
		 WHERE B.USER_ID LIKE '%' || #{value} || '%'
		</if>
		<if test="option == 'title'">
		 WHERE A.POST_TITLE LIKE '%' || #{value} || '%'
		</if>
		<if test="option == 'content'">
		 WHERE A.POST_CONTENT LIKE '%' || #{value} || '%'
		</if>
         ORDER BY A.POST_CODE DESC
	</select>
	<select id="selectPostforAdmin" parameterType="hashmap" resultType="PostForAdminDTO">
		SELECT
		       A.POST_CODE AS "code"
		     , B.AUTH_STATUS AS "authStatus"
		     , A.POST_TITLE AS "title"
		     , C.USER_ID AS "sellerId"
		     , A.BLIND_YN AS "blindYn"
		     , A.POST_TIME AS "time"
		  FROM POST A
		  JOIN AUTHENTIC B ON (A.AUTH_CODE = B.AUTH_CODE)
		  JOIN "USER" C ON (A.SELLER_CODE = C.USER_CODE)
		<where>
			<if test="authCode != null and authCode gt 0">
				A.AUTH_CODE = #{authCode}
			</if>
			<if test="blindYn != null and blindYn != 'both'">
				AND A.BLIND_YN = #{blindYn}
			</if>
			<if test="sellerId != null and sellerId != ''">
				AND C.USER_ID = #{sellerId}
			</if>
			<if test="title != null and title != ''">
				AND A.POST_TITLE LIKE '%' || #{title} || '%'
			</if>
			<if test="content != null and content != ''">
				AND A.POST_CONTENT LIKE '%' || #{content} || '%'
			</if>
		</where>
		 ORDER BY A.POST_CODE DESC
	</select>
	<select id="selectTotalPostCount" parameterType="hashmap" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM POST A
		<where>
			<if test="title != null and !title.equals('')">
				A.POST_TITLE LIKE '%' || #{title} || '%'
			</if>
			<if test="content != null and content != ''">
			AND A.POST_CONTENT LIKE '%' || #{content} || '%'
			</if>
			<if test="authCode != null and authCode gt 0">
			AND A.AUTH_CODE = #{authCode}
			</if>
			<if test="(itemPriceRangeMin != null and itemPriceRangeMin gte 0) and (itemPriceRangeMax != null and itemPriceRangeMax gte 0)">
			AND A.ITEM_PRICE BETWEEN #{itemPriceRangeMin} AND #{itemPriceRangeMax}
			</if>
		</where>
	</select>
	<select id="selectPostForUser" parameterType="PostPageCriteria" resultType="PostForUserDTO">
		SELECT
		       E.RNUM
		     , E.POST_CODE AS "code"
		     , E.POST_TITLE AS "title"
		     , E.ITEM_PRICE AS "itemPrice"
		     , E.AUTH_STATUS AS "authStatus"
		     , E.LIKE_COUNT AS "likes"
		     , E.POST_VIEW AS "views"
		     , E.THUMB_PATH AS "thumbPath"
		  FROM (SELECT ROWNUM RNUM
		             , D.POST_CODE
		             , D.POST_TITLE
		             , D.ITEM_PRICE
		             , D.AUTH_STATUS
		             , D.LIKE_COUNT
		             , D.POST_VIEW
		             , D.THUMB_PATH
		          FROM (SELECT A.POST_CODE
		                     , A.POST_TITLE
		                     , A.ITEM_PRICE
		                     , B.AUTH_STATUS
		                     , A.LIKE_COUNT
		                     , A.POST_VIEW
		                     , C.THUMB_PATH
		                  FROM POST A
		                  JOIN AUTHENTIC B ON (A.AUTH_CODE = B.AUTH_CODE)
		                  JOIN IMG_FILE C ON (A.POST_CODE = C.POST_CODE)
		                 WHERE A.BLIND_YN = 'N'
						<if test="title != null and !title.equals('')">
						   AND A.POST_TITLE LIKE '%' || #{title} || '%'
						</if>
						<if test="content != null and content != ''">
						   AND A.POST_CONTENT LIKE '%' || #{content} || '%'
						</if>
						<if test="authCode != null and authCode gt 0">
						   AND A.AUTH_CODE = #{authCode}
						</if>
						<if test="(itemPriceRangeMin != null and itemPriceRangeMin gte 0) and (itemPriceRangeMax != null and itemPriceRangeMax gte 0)">
						   AND A.ITEM_PRICE BETWEEN #{itemPriceRangeMin} AND #{itemPriceRangeMax}
						</if>
		                   AND C.IMG_TYPE = 'REPRESENTATIVE'
		                 ORDER BY A.POST_CODE DESC) D
		         <![CDATA[
		         WHERE ROWNUM <= #{endRow}) E
		         ]]>
		 WHERE E.RNUM >= #{startRow}
	</select>
	<select id="selectSinglePost" parameterType="_int" resultType="DetailPostDTO">
		SELECT
			   A.POST_CODE AS "code"
             , C.USER_ID AS "sellerId"
             <!-- , D.USER_ID AS "buyerId" -->
             , E.POST_CAT_NAME AS "catName"
             , B.AUTH_STATUS AS "authStatus"
             , A.POST_TITLE AS "title"
             , A.POST_CONTENT AS "content"
             , A.LIKE_COUNT AS "likeCount"
             , A.POST_TIME AS "time"
             , A.SOLD_YN AS "soldYn"
             , A.REPORT_COUNT AS "reportCount"
             , A.BLIND_YN AS "blindYn"
             , A.ITEM_PRICE AS "itemPrice"
             , A.POST_VIEW AS "view"
          FROM POST A
          JOIN AUTHENTIC B ON (A.AUTH_CODE = B.AUTH_CODE)
          JOIN "USER" C ON (A.SELLER_CODE = C.USER_CODE)
          <!-- JOIN "USER" D ON (A.BUYER_CODE = D.USER_CODE) -->
          JOIN POST_CAT E ON (A.POST_CAT_CODE = E.POST_CAT_CODE)
         WHERE A.POST_CODE = #{code}
	</select>
	
	<insert id="insertNewPost" parameterType="PostDTO">
		INSERT
		  INTO Post A
		(
		  A.POST_CODE
        , A.SELLER_CODE
        , A.POST_CAT_CODE
        , A.POST_TITLE
        , A.POST_CONTENT
        , A.ITEM_PRICE
		)
		VALUES
		(
		  SEQ_POST_CODE.NEXTVAL
		, #{sellerCode}
		, 1
		, #{title}
		, #{content}
		, #{itemPrice}
		)
	</insert>
	<insert id="insertPost" parameterType="PostDTO">
		INSERT
		  INTO POST A
		(
		  A.POST_CODE
		, A.SELLER_CODE
		, A.POST_CAT_CODE
		, A.AUTH_CODE
		, A.POST_TITLE
		, A.POST_CONTENT
		, A.ITEM_PRICE
		)
		VALUES
		(
		  SEQ_POST_CODE.NEXTVAL,
		  #{sellerCode},
		  #{catCode},
		  #{authCode},
		  #{title},
		  #{content},
		  #{itemPrice}
		)
	</insert>
	<insert id="insertImgFile" parameterType="ImgFileDTO">
		<selectKey keyProperty="postCode" resultType="_int" order="BEFORE">
			SELECT MAX(A.POST_CODE)
			  FROM POST A
		</selectKey>
		INSERT
		  INTO IMG_FILE A
		(
		  IMG_CODE
		, IMG_CAT_CODE
		, POST_CODE
		, ORIG_NAME
		, UUID_NAME
		, IMG_TYPE
		, ORIG_PATH
		, THUMB_PATH
		)
		VALUES
		(
		  SEQ_IMG_CODE.NEXTVAL,
		  2,
		  #{postCode},
		  #{origName},
		  #{uuidName},
		  #{imgType},
		  #{origPath},
		  #{thumbPath}
		)
	</insert>
	
	<update id="blindPostByCode" parameterType="_int">
		UPDATE
			   POST A
		   SET A.BLIND_YN = 'Y'
		 WHERE A.POST_CODE = #{code}
	</update>
	<update id="modifyPostBlind" parameterType="hashmap">
		UPDATE
			   POST A
		   SET A.BLIND_YN = #{blindYn}
		 WHERE A.POST_CODE = #{code}
	</update>
	<update id="modifyPost" parameterType="hashmap">
		UPDATE
			   POST A
		<set>
			<if test="title != null and title != ''">
				A.POST_TITLE = #{title}
			</if>
			<if test="content != null and content != ''">
			  , A.POST_CONTENT = #{content}
			</if>
			<if test="itemPrice != null and itemPrice gt 0">
			  , A.ITEM_PRICE = #{itemPrice}
			</if>
		</set>
		<if test="code != null and code gt 0">
		 WHERE A.POST_CODE = #{code}
		</if>
	</update>
	<update id="modifyPostAdmin" parameterType="hashmap">
		UPDATE
			   POST A
		<set>
			<if test="authCode != null and authCode gt 0">
				A.AUTH_CODE = #{authCode}
			</if>
			<if test="blindYn != null and blindYn != ''">
			  , A.BLIND_YN = #{blindYn}
			</if>
			<if test="catCode != null and catCode gt 0">
			  , A.POST_CAT_CODE = #{catCode}
			</if>
		</set>
		 WHERE A.POST_CODE = #{code}
	</update>
	
	<delete id="deletePostByCode" parameterType="_int">
		DELETE
		  FROM POST A
		 WHERE A.POST_CODE = #{code}
	</delete>
</mapper>
